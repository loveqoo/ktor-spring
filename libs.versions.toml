[versions]
akkurate = "0.7.0"
arrow = "1.2.3"
asyncer = "1.1.2" # r2dbc-mysql
aspectj = "1.9.21"
detekt = "1.23.5"
hikari = "5.1.0"
h2 = "2.2.224"
komapper = "1.16.1"
kover = "0.6.1"
ktlint = "11.3.1"
kotlin = "1.9.22"
kotlinx = "0.5.0"
ksp = "1.9.22-1.0.17"
ktor = "2.3.9"
logback = "1.4.14"
prometheus = "1.6.3"
r2dbc = "1.0.0.RELEASE"
resilience4j = "2.2.0"
spring = "6.1.3"

[libraries]
akkurate-core = { module = "dev.nesk.akkurate:akkurate-core", version.ref = "akkurate" }
akkurate-ksp-plugin = { module = "dev.nesk.akkurate:akkurate-ksp-plugin", version.ref = "akkurate" }
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
asyncer-mysql = { module = "io.asyncer:r2dbc-mysql", version.ref = "asyncer" }
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
hikari-cp = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
h2-database = { module = "com.h2database:h2", version.ref = "h2" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "prometheus" }
komapper-platform = { module = "org.komapper:komapper-platform", version.ref = "komapper" }
komapper-starter-r2dbc = { module = "org.komapper:komapper-starter-r2dbc", version.ref = "komapper" }
komapper-dialect-h2-r2dbc = { module = "org.komapper:komapper-dialect-h2-r2dbc", version.ref = "komapper" }
komapper-processor = { module = "org.komapper:komapper-processor", version.ref = "komapper" }
ktlint-gradle = { module = "org.jlleitschuh.gradle.ktlint:org.jlleitschuh.gradle.ktlint.gradle.plugin", version.ref = "ktlint" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime-jvm", version.ref = "kotlinx" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-request-validation = { module = "io.ktor:ktor-server-request-validation", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-content-negotiation-jvm = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-server-default-headers-jvm = { module = "io.ktor:ktor-server-default-headers-jvm", version.ref = "ktor" }
ktor-server-metrics-micrometer-jvm = { module = "io.ktor:ktor-server-metrics-micrometer-jvm", version.ref = "ktor" }
ktor-server-netty-jvm = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-swagger-jvm = { module = "io.ktor:ktor-server-swagger-jvm", version.ref = "ktor" }
ktor-serialization-kotlinx-json-jvm = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }
ktor-server-tests-jvm = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
r2dbc-h2 = { module = "io.r2dbc:r2dbc-h2", version.ref = "r2dbc" }
r2dbc-pool = { module = "io.r2dbc:r2dbc-pool", version.ref = "r2dbc" }
resilience4j-kotlin = { module = "io.github.resilience4j:resilience4j-kotlin", version.ref = "resilience4j"}
resilience4j-circuitbreaker = { module = "io.github.resilience4j:resilience4j-circuitbreaker", version.ref = "resilience4j"}
spring-context = { module = "org.springframework:spring-context", version.ref = "spring" }
spring-aspect = { module = "org.springframework:spring-aspects", version.ref = "spring" }
aspectj-weaver = { module = "org.aspectj:aspectjweaver", version.ref = "aspectj" }

[bundles]
ktor-deps = [
    "ktor-server-auth",
    "ktor-server-call-logging",
    "ktor-server-core-jvm",
    "ktor-server-content-negotiation-jvm",
    "ktor-server-default-headers-jvm",
    "ktor-server-metrics-micrometer-jvm",
    "ktor-server-netty-jvm",
    "ktor-server-request-validation",
    "ktor-server-resources",
    "ktor-server-swagger-jvm",
    "ktor-serialization-kotlinx-json-jvm",
]
resilience4j = [
    "resilience4j-kotlin",
    "resilience4j-circuitbreaker",
]
ktor-test = [
    "ktor-server-tests-jvm"
]

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ktor-plugin = { id = "io.ktor.plugin", version.ref = "ktor" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
